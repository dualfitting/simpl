/* Generated By:JJTree: Do not edit this line. ASTValue.java */

package javacc;

import java.util.LinkedList;
import java.util.List;

import utils.InterpretException;
import utils.TypeException;

public class ASTValue extends SimpleNode {

	private String name;


	private int intValue;
	private boolean boolValue;
	private List<Object> listValue;
	private List<Object> pairValue;
	private int type;
	
	public ASTValue DeepCopy()
	{
		ASTValue copy = new ASTValue(super.id);
		copy.setName(name);
		copy.setIntValue(intValue);
		copy.setType(type);
		if(null != listValue)
		{
			List<Object> copyList = new LinkedList<Object>();
			for(int i = 0; i < listValue.size(); ++i)
				copyList.add(listValue.get(i));
			copy.setListValue(copyList);
		}
		
		if(null != pairValue)
		{
			List<Object> copyPair = new LinkedList<Object>();
			for(int i = 0; i < pairValue.size(); ++i)
				copyPair.add(pairValue.get(i));
			copy.setPairValue(copyPair);
		}
		
		return copy;
	}

	public ASTValue(int id) {
		super(id);
	}

	public ASTValue(SimPLParser p, int id) {
		super(p, id);
	}

	public static Node jjtCreate(int id) {
		return new ASTValue(id);
	}

	public static Node jjtCreate(SimPLParser p, int id) {
		return new ASTValue(p, id);
	}

	/** Accept the visitor. 
	 * @throws TypeException 
	 * @throws InterpretException **/
	public Object jjtAccept(SimPLParserVisitor visitor, Object data) throws TypeException, InterpretException {
		return visitor.visit(this, data);
	}
	

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public int getIntValue() {
		return intValue;
	}

	public void setIntValue(int intValue) {
		this.intValue = intValue;
	}

	public boolean getBoolValue() {
		return boolValue;
	}

	public void setBoolValue(boolean boolValue) {
		this.boolValue = boolValue;
	}

	public List<Object> getListValue() {
		return listValue;
	}

	public void setListValue(List<Object> listValue) {
		this.listValue = listValue;
	}

	public List<Object> getPairValue() {
		return pairValue;
	}

	public void setPairValue(List<Object> pairValue) {
		this.pairValue = pairValue;
	}

	public int getType() {
		return type;
	}

	public void setType(int type) {
		this.type = type;
	}
	

}
